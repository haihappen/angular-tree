// Generated by CoffeeScript 1.6.3
(function() {
  angular.module('angularTree', []);

  angular.module('angularTree').directive('angularTree', function() {
    return {
      restrict: 'A',
      controller: function($scope) {
        var childOf;
        childOf = function(from, to) {
          while (to) {
            if (from.$id === to.$id) {
              return true;
            }
            to = to.$parent;
          }
          return false;
        };
        $scope.$on('dragstart', function(_, children, index) {
          return $scope.from = {
            children: children,
            index: index
          };
        });
        $scope.$on('dragover', function(_, children, index) {
          return $scope.to = {
            children: children,
            index: index
          };
        });
        $scope.$on('dragleave', function() {
          return $scope.to = void 0;
        });
        return $scope.$on('drop', function(_, direction) {});
      },
      compile: function(element) {
        var template;
        template = element.clone();
        template.removeAttr('ng-init');
        return function(scope) {
          return scope.template = template[0].outerHTML;
        };
      }
    };
  });

  angular.module('angularTree').directive('draggable', function($compile, $rootScope) {
    return {
      restrict: 'A',
      controller: function($scope) {
        return $scope.$watch('y', function() {
          return $rootScope.position = (function() {
            switch (false) {
              case !($scope.y < $scope.top + $scope.height * 0.25):
                return 'above';
              case !($scope.y < $scope.top + $scope.height * 0.75):
                return 'to';
              case !($scope.y < $scope.top + $scope.height):
                return 'below';
            }
          })();
        });
      },
      link: function(scope, element) {
        var _base;
        scope.children = (_base = scope.child).children || (_base.children = []);
        scope.$watch('children', function(children) {
          var template;
          if (children == null) {
            return;
          }
          if (children.length === 0) {
            return;
          }
          template = angular.element(scope.template);
          $compile(template)(scope);
          return element.append(template);
        });
        element.bind('dragstart', function(e) {
          scope.$emit('dragstart', scope.children, scope.children.indexOf(scope.child));
          element.addClass('dragging');
          return e.stopPropagation();
        });
        return element.bind('drop', function(e) {
          scope.$emit('drop', scope.children, scope.children.indexOf(scope.child));
          element.removeClass('dragging');
          return e.stopPropagation();
        });
      }
    };
  });

}).call(this);
